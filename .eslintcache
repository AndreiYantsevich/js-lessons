[{"D:\\js-lessons\\src\\index.tsx":"1","D:\\js-lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"2","D:\\js-lessons\\src\\redux\\actions.ts":"3","D:\\js-lessons\\src\\redux\\currencyReducer.ts":"4","D:\\js-lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"5","D:\\js-lessons\\src\\lessons\\lesson1\\lesson1.tsx":"6","D:\\js-lessons\\src\\lessons\\lesson2\\lesson2.ts":"7","D:\\js-lessons\\src\\App.tsx":"8","D:\\js-lessons\\src\\redux\\state.ts":"9","D:\\js-lessons\\src\\lessons\\lesson3\\lesson_3.ts":"10","D:\\js-lessons\\src\\lessons\\lesson3\\API.ts":"11","D:\\js-lessons\\src\\lessons\\lesson3\\Lesson3.tsx":"12","D:\\js-lessons\\src\\lessons\\lesson4\\lesson_4.ts":"13","D:\\js-lessons\\src\\lessons\\lesson4\\Lesson4.tsx":"14","D:\\js-lessons\\src\\lessons\\lesson5\\lesson5.ts":"15"},{"size":319,"mtime":1609752860853,"results":"16","hashOfConfig":"17"},{"size":3871,"mtime":1609757735301,"results":"18","hashOfConfig":"19"},{"size":1503,"mtime":1632342405861,"results":"20","hashOfConfig":"17"},{"size":1713,"mtime":1632343112788,"results":"21","hashOfConfig":"19"},{"size":6002,"mtime":1632394601023,"results":"22","hashOfConfig":"19"},{"size":860,"mtime":1609756877852,"results":"23","hashOfConfig":"19"},{"size":6130,"mtime":1639167586109,"results":"24","hashOfConfig":"19"},{"size":616,"mtime":1641669214745,"results":"25","hashOfConfig":"17"},{"size":286,"mtime":1609751766196,"results":"26","hashOfConfig":"17"},{"size":1125,"mtime":1640456331608,"results":"27","hashOfConfig":"17"},{"size":525,"mtime":1640458799120,"results":"28","hashOfConfig":"17"},{"size":2761,"mtime":1640459262831,"results":"29","hashOfConfig":"17"},{"size":9257,"mtime":1640549698819,"results":"30","hashOfConfig":"17"},{"size":513,"mtime":1640545419697,"results":"31","hashOfConfig":"17"},{"size":12322,"mtime":1641767965146,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k9m0gj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"73um83",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\js-lessons\\src\\index.tsx",[],"D:\\js-lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\js-lessons\\src\\redux\\actions.ts",[],"D:\\js-lessons\\src\\redux\\currencyReducer.ts",[],"D:\\js-lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["65","66","67"],"D:\\js-lessons\\src\\lessons\\lesson1\\lesson1.tsx",[],"D:\\js-lessons\\src\\lessons\\lesson2\\lesson2.ts",["68"],"D:\\js-lessons\\src\\App.tsx",["69","70"],"D:\\js-lessons\\src\\redux\\state.ts",[],"D:\\js-lessons\\src\\lessons\\lesson3\\lesson_3.ts",["71","72"],"import axios from 'axios';\r\n\r\n// Event loop\r\n// https://learn.javascript.ru/event-loop\r\n// https://habr.com/ru/company/ruvds/blog/340508/\r\n// https://www.youtube.com/watch?v=8aGhZQkoFbQ\r\n// https://www.youtube.com/watch?v=j4_9BZezSUA\r\n// https://www.jsv9000.app/\r\n\r\n// Promise\r\n// https://learn.javascript.ru/promise-basics\r\n// https://www.youtube.com/watch?v=1idOY3C1gYU\r\n\r\n\r\n// https://jsonplaceholder.typicode.com/posts/1\r\n// https://habr.com/ru/company/oleg-bunin/blog/417461/?_ga=2.54695343.543933152.1602500664-1040035071.1596811661\r\n\r\n/*axios.post('https://jsonplaceholder.typicode.com/posts', {\r\n    title: 'Andrei',\r\n    body: 'Andrei body',\r\n    userId: 1\r\n}).then(res => console.log(res.data))\r\n\r\naxios.get('https://jsonplaceholder.typicode.com/posts').then(res => console.log(res.data))\r\n\r\naxios.put('https://jsonplaceholder.typicode.com/posts/1', {\r\n    id: 1,\r\n    title: 'Andrei Yan',\r\n    body: 'Body ne body',\r\n    userId: 1\r\n}).then(res => console.log(res.data))\r\n\r\naxios.delete('https://jsonplaceholder.typicode.com/posts/1').then(res => console.log(res.data))*/\r\n\r\n\r\n// just a plug\r\nexport default ()=>{};","D:\\js-lessons\\src\\lessons\\lesson3\\API.ts",[],"D:\\js-lessons\\src\\lessons\\lesson3\\Lesson3.tsx",[],"D:\\js-lessons\\src\\lessons\\lesson4\\lesson_4.ts",["73"],"console.log('lesson 4');\r\n\r\n// http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D\r\n// https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\r\n\r\n//Task 1\r\n// setTimeout(() => console.log(1), 0);\r\n// console.log(2);\r\n// (() => console.log(3))();\r\n// Promise.resolve(console.log(4));\r\n// 2 3 4 1\r\n\r\n//Task 2\r\n// new Promise((res, rej) => {\r\n//     console.log(1);\r\n// })\r\n// new Promise((res, rej) => {\r\n//     setTimeout(() => console.log(2), 0);\r\n// })\r\n// Promise.resolve(setTimeout(() => console.log(3), 0));\r\n// console.log(4);\r\n// Promise.reject(console.log(5));\r\n// 1 4 5 2 3\r\n\r\n//Task 3\r\n// (function() {\r\n//     setTimeout(() => console.log(1), 100);\r\n// })();\r\n// console.log(2);\r\n// let i = 0;\r\n// while (i < 5000000000) {\r\n//     i++\r\n// }\r\n// new Promise((res, rej) => {\r\n//     setTimeout(() => console.log(3), 50);\r\n// })\r\n// function f() {\r\n//     console.log(4);\r\n// }\r\n// Promise.resolve(console.log(5));\r\n//2 5 1 3\r\n\r\n//Task 4\r\n// function f(num: number) {\r\n//     console.log(num)\r\n// }\r\n// Promise.resolve(1)\r\n//     .then(f);\r\n// (function() {\r\n//     console.log(2);\r\n// })();\r\n// console.log(3);\r\n// new Promise((res, rej) => {\r\n//     console.log(4);\r\n// })\r\n// setTimeout(f, 0, 5);\r\n//2 3 4 1 5\r\n\r\n// async function sleep(ms: number) {\r\n//     return new Promise((res, rej) => {\r\n//         setTimeout(() => {\r\n//             console.log(ms);\r\n//             res();\r\n//         }, ms*100)\r\n//     });\r\n// }\r\n//\r\n// async function show() {\r\n//     await sleep(3)\r\n//     await sleep(2)\r\n//     await sleep(1)\r\n// }\r\n//\r\n// show();\r\n\r\n// Task 5\r\n// let pr1 = new Promise((res) => {\r\n//     res(10);\r\n// });\r\n// let pr2 = new Promise((res) => {\r\n//     res(0)\r\n// });\r\n// pr1\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 2;\r\n//     })\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 2;\r\n//     })\r\n//     .then(console.log);\r\n// pr2\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 1;\r\n//     })\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 1;\r\n//     })\r\n//     .then(console.log);\r\n// 10 0 12 1 14 2\r\n\r\n//Task 6\r\n// setTimeout(() => console.log(1), 0);\r\n// console.log(2);\r\n// new Promise((resolve, reject) => {\r\n//     setTimeout(() => reject(console.log(3)), 1000);\r\n// }).catch(() => console.log(4));\r\n// console.log(5);\r\n// 2 5 1 3 4\r\n\r\n//Task 7\r\n// console.log(1);\r\n// function f() {\r\n//     console.log(2);\r\n// }\r\n// setTimeout(()=>{\r\n//     console.log(3);\r\n//     let p = new Promise((res, rej) => {\r\n//         console.log(4);\r\n//         res();\r\n//     });\r\n//     p.then(() => f())\r\n// },0);\r\n// let l = new Promise((res, rej) => {\r\n//     console.log(5);\r\n//     rej();\r\n// });\r\n// l.then(res => console.log(res)).catch(() => console.log(6));\r\n// console.log(7);\r\n// 1 5 7 6 3 4 2\r\n\r\n\r\n// Task 01\r\n// Создайте промис, который постоянно находиться в состоянии pending.\r\n// В конструкторе промиса выведите в консоль сообщение \"Promise is created\".\r\n\r\n/*let p = new Promise((res, rej) => {\r\n    console.log('Promise is created')\r\n})\r\nconsole.log(p);*/\r\n\r\n\r\n// Task 02\r\n// Создайте промис, который после создания сразу же переходит в состояние resolve\r\n// и возвращает строку 'Promise Data'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\n// new Promise((res, rej) => {\r\n//     res(\"Promise Data\");\r\n// }).then((res) => console.log(\"This is the \" + res))\r\n\r\n\r\n// Task 03\r\n// Создайте промис, который после создания сразу же переходит в состояние rejected\r\n// и возвращает строку 'Promise Error'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\n// new Promise((res, rej) => {\r\n//     rej(\"Promise Error\");\r\n// })\r\n//     .then((res) => console.log(res))\r\n//     .catch((rej) => console.log(\"This is the \" + rej))\r\n\r\n\r\n// Task 04\r\n// Создайте промис, который переходит в состояние resolved через 3с.\r\n// (Используйте setTimeout)\r\n// и возвращает строку 'Promise Data'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\n// new Promise((resolve, reject) => {\r\n//     setTimeout(() => resolve('Promise Data'), 3000);\r\n// }).then((resolve) => console.log(resolve));\r\n\r\n\r\n// Task 05\r\n// Создайте литерал объекта handlePromise со следующими свойствами:\r\n// promise, resolve, reject, onSuccess, onError\r\n// Проинициализируйте первые три свойства null,\r\n// а последние два функциями, которые принимают один параметр и выводят\r\n// в консоль сообщения: первая - `Promise is resolved with data: ${paramName}`\r\n// вторая - `Promise is rejected with error: ${paramName}`\r\n// Создайте три обработчика события click для кнопок \"Create Promise\", \"Resolve Promise\", \"Reject Promise\".\r\n// Первый обработчик, создает промис, заполняет первые три свойства,\r\n// описаного выше объекта: свойство promise получает новый созданный промис,\r\n// свойства resolve и reject получают ссылки на соответствующие функции\r\n// resolve и reject. Следующие два обработчика запускают методы resolve и reject.\r\n\r\ntype promiseType = {\r\n    promise: null | Promise<any>\r\n    resolve: null | Function\r\n    reject: null | Function\r\n    onSuccess: (paramName: string) => void\r\n    onError: (paramName: string) => void\r\n}\r\n\r\nconst handlePromise: promiseType = {\r\n    promise: null,\r\n    resolve: null,\r\n    reject: null,\r\n    onSuccess: (paramName: string) => {\r\n        console.log(`Promise is resolved with data: ${paramName}`)\r\n    },\r\n    onError: (paramName: string) => {\r\n        console.log(`Promise is rejected with error: ${paramName}`)\r\n    }\r\n}\r\n\r\nexport const createPromise = () => {\r\n    handlePromise.promise = new Promise((resolve, reject) => {\r\n        handlePromise.resolve = resolve;\r\n        handlePromise.reject = reject;\r\n    })\r\n    handlePromise.promise\r\n        .then(handlePromise.onSuccess)\r\n        .catch(handlePromise.onError)\r\n    //@ts-ignore\r\n    window.hndlprom = handlePromise;\r\n}\r\n\r\nexport const resolvePromise = () => {\r\n    handlePromise.resolve && handlePromise.resolve('1')\r\n}\r\n\r\nexport const rejectPromise = () => {\r\n    handlePromise.reject && handlePromise.reject('0')\r\n}\r\n\r\n\r\n// Task 06\r\n// Создайте промис, который через 1 с возвращает строку \"My name is\".\r\n// Создайте функцию onSuccess, которая получает один параметр,\r\n// прибавляет к нему Ваше имя и возвращает новую строку из функции\r\n// Создайте функцию print, которая выводит в консоль значение своего параметра\r\n// Добавьте два метода then и передайте созданные функции.\r\n\r\n// new Promise((resolve, reject) => {\r\n//     setTimeout(() => resolve('My name is '), 1000)\r\n// }).then((resolve) => onSuccess(resolve))\r\n//     .then((resolve) => print(resolve))\r\n//\r\n// const onSuccess = (param: any) => {\r\n//     return param + 'Andrei'\r\n// }\r\n//\r\n// const print = (param: any) => {\r\n//     console.log(param)\r\n// }\r\n\r\n\r\n// Task 7\r\n// Создайте три промиса. Первый промис возвращает объект { name: \"Anna\" } через 2с,\r\n// второй промис возвращает объект {age: 16} через 3 с, а третий {city: ''} через 4с.\r\n// Получите результаты работы промисов, объедините свойства объектов\r\n// и выведите в консоль {name, age, city}\r\n\r\nconst pr1 = new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve({name: 'Anna'}), 2000)\r\n})\r\nconst pr2 = new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve({age: 16}), 3000)\r\n})\r\nconst pr3 = new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve({city: ''}), 4000)\r\n})\r\nPromise.all([pr1, pr2, pr3])\r\n    .then((res) => {\r\n        let obj = res.reduce((acc, el) => Object.assign(acc, el), {})\r\n        console.log(obj)\r\n    })\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};","D:\\js-lessons\\src\\lessons\\lesson4\\Lesson4.tsx",[],"D:\\js-lessons\\src\\lessons\\lesson5\\lesson5.ts",["74","75","76","77"],{"ruleId":"78","severity":1,"message":"79","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":23},{"ruleId":"78","severity":1,"message":"82","line":11,"column":9,"nodeType":"80","messageId":"81","endLine":11,"endColumn":16},{"ruleId":"78","severity":1,"message":"83","line":11,"column":18,"nodeType":"80","messageId":"81","endLine":11,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":200,"column":1,"nodeType":"86","endLine":201,"endColumn":3},{"ruleId":"78","severity":1,"message":"87","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":15},{"ruleId":"78","severity":1,"message":"88","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":15},{"ruleId":"78","severity":1,"message":"89","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":13},{"ruleId":"84","severity":1,"message":"85","line":37,"column":1,"nodeType":"86","endLine":37,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":277,"column":1,"nodeType":"86","endLine":278,"endColumn":3},{"ruleId":"78","severity":1,"message":"90","line":395,"column":5,"nodeType":"80","messageId":"81","endLine":395,"endColumn":8},{"ruleId":"78","severity":1,"message":"91","line":396,"column":5,"nodeType":"80","messageId":"81","endLine":396,"endColumn":8},{"ruleId":"78","severity":1,"message":"92","line":428,"column":10,"nodeType":"80","messageId":"81","endLine":428,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":441,"column":1,"nodeType":"86","endLine":442,"endColumn":3},"@typescript-eslint/no-unused-vars","'CurrencyState' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Lesson3' is defined but never used.","'Lesson4' is defined but never used.","'axios' is defined but never used.","'One' is assigned a value but never used.","'Two' is assigned a value but never used.","'sumTwoNumbers' is defined but never used."]